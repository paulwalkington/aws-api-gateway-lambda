name: Pull Request Workflow

on:
  pull_request:
    branches:
      - "*"

env:
  AWS_REGION: "eu-west-2"

permissions:
  id-token: write
  contents: read

jobs:
  terraform_plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
          aws-region: eu-west-2

      - uses: ./.github/actions/setup-terraform

      - name: Terraform init
        run: |
          cd terraform
          terraform init

      - name: Terraform plan
        run: bash scripts/_terraform-plan.sh

  # terraform_apply:
  #   name: Terraform apply
  #   runs-on: ubuntu-latest
  #   needs: ["terraform_plan"]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_ARN_TEST }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - uses: ./.github/actions/setup-terraform
  #     - uses: ./.github/actions/setup-zsh
  #     - uses: ./.github/actions/short-sha

  #     - name: Terraform apply
  #       run: |
  #         source mdm.sh
  #         cd terraform/20-app
  #         terraform init -backend-config etc/backend.test.tfvars -reconfigure
  #         mdm terraform apply:layer 20-app ci-$SHORT_SHA
  #       shell: zsh {0}

  # terraform_destroy:
  #   name: Terraform destroy
  #   runs-on: ubuntu-latest
  #   if: ${{ always() }}
  #   needs: ["terraform_apply"]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_ARN_TEST }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - uses: ./.github/actions/setup-terraform
  #     - uses: ./.github/actions/setup-zsh
  #     - uses: ./.github/actions/short-sha

  #     - name: Terraform destroy
  #       run: |
  #         source mdm.sh
  #         cd terraform/20-app
  #         terraform init -backend-config etc/backend.test.tfvars -reconfigure
  #         mdm terraform destroy:layer 20-app ci-$SHORT_SHA
  #       shell: zsh {0}
